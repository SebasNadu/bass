services:
  bass-blue:
    build:
      context: .
      dockerfile: prod.dockerfile
    container_name: bass-blue
    restart: always
    env_file:
      - .env
    ports:
      - "8081:8080"
    networks:
      - bass-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  bass-green:
    build:
      context: .
      dockerfile: prod.dockerfile
    container_name: bass-green
    restart: always
    env_file:
      - .env
    ports:
      - "8082:8080"
    networks:
      - bass-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - bass-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME}", "-d", "${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  bass-network:
    driver: bridge
